{"version":3,"sources":["horas.js","ponentes.js","tags.js"],"names":["document","querySelector","categoria","dias","querySelectorAll","inputHiddenDia","inputHiddenHora","addEventListener","terminoBusqueda","forEach","dia","busqueda","categoria_id","value","e","target","name","horaPrevia","classList","remove","Object","values","includes","buscarEventos","async","url","resultado","fetch","eventos","listadoHoras","li","add","horasTomadas","map","evento","hora_id","listadoHorasArray","Array","from","filter","dataset","horaId","hora","seleccionarHora","obtenerHorasDisponibles","json","id","horaSeleccionada","onclick","ponentesInput","ponentes","ponentesFiltrados","listadoPonentes","ponenteHidden","seleccionarPonente","ponente","ponentePrevio","ponenteId","respuesta","arrayPonentes","nombre","trim","apellido","formatearPonentes","obtenerPonentes","length","expresion","RegExp","toLowerCase","search","firstChild","removeChild","ponenteHTML","createElement","textContent","appendChild","noResultados","mostrarPonentes","obtenerPonente","ponenteDOM","tagsInput","tagsDiv","tagsInputHidden","tags","mostrarTags","tag","etiqueta","ondblclick","eliminarTag","actualizarInputHidden","toString","split","keyCode","preventDefault"],"mappings":"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","file":"bundle.js","sourcesContent":["(function () {\r\n    const horas = document.querySelector('#horas')\r\n\r\n    if (horas) {\r\n        const categoria = document.querySelector('[name=\"categoria_id\"]')\r\n        const dias = document.querySelectorAll('[name=\"dia\"]');\r\n        const inputHiddenDia = document.querySelector('[name=\"dia_id\"]');\r\n        const inputHiddenHora = document.querySelector('[name=\"hora_id\"]');\r\n\r\n        categoria.addEventListener('change',terminoBusqueda)\r\n        dias.forEach(dia => dia.addEventListener('change',terminoBusqueda))\r\n\r\n\r\n        let busqueda = {\r\n            categoria_id: +categoria.value || '',\r\n            dia: +inputHiddenDia.value || ''\r\n        }\r\n\r\n\r\n        if (!Object.values(busqueda).includes('')) {\r\n            (async () => {\r\n                await buscarEventos();\r\n\r\n                const id = inputHiddenHora.value;\r\n\r\n                // Resaltar la hora actual\r\n                const horaSeleccionada = document.querySelector(`[data-hora-id=\"${id}\"]`)\r\n                horaSeleccionada.classList.remove('horas__hora--deshabilitada')\r\n                horaSeleccionada.classList.add('horas__hora--seleccionada')\r\n\r\n                horaSeleccionada.onclick = seleccionarHora;\r\n            })()\r\n        }\r\n\r\n        function terminoBusqueda(e) {\r\n            busqueda[ e.target.name ] = e.target.value;\r\n\r\n            // Reiniciar los campos ocultos y el selector de horas\r\n            inputHiddenHora.value = '';\r\n            inputHiddenDia.value = '';\r\n\r\n            const horaPrevia = document.querySelector('.horas__hora--seleccionada')\r\n            if (horaPrevia) {\r\n                horaPrevia.classList.remove('horas__hora--seleccionada')\r\n            }\r\n\r\n            if (Object.values(busqueda).includes('')) {\r\n                return\r\n            }\r\n\r\n            buscarEventos();\r\n        }\r\n\r\n        async function buscarEventos() {\r\n            const { dia,categoria_id } = busqueda\r\n            const url = `/api/eventos-horario?dia_id=${dia}&categoria_id=${categoria_id}`;\r\n\r\n            const resultado = await fetch(url);\r\n            const eventos = await resultado.json();\r\n            obtenerHorasDisponibles(eventos);\r\n        }\r\n\r\n        function obtenerHorasDisponibles(eventos) {\r\n            // Reiniciar las horas\r\n            const listadoHoras = document.querySelectorAll('#horas li');\r\n            listadoHoras.forEach(li => li.classList.add('horas__hora--deshabilitada'))\r\n\r\n            // Comprobar eventos ya tomados, y quitar la variable de deshabilitado\r\n            const horasTomadas = eventos.map(evento => evento.hora_id);\r\n            const listadoHorasArray = Array.from(listadoHoras);\r\n\r\n            const resultado = listadoHorasArray.filter(li => !horasTomadas.includes(li.dataset.horaId));\r\n            resultado.forEach(li => li.classList.remove('horas__hora--deshabilitada'))\r\n\r\n            const horasDisponibles = document.querySelectorAll('#horas li:not(.horas__hora--deshabilitada)');\r\n            horasDisponibles.forEach(hora => hora.addEventListener('click',seleccionarHora));\r\n        }\r\n\r\n        function seleccionarHora(e) {\r\n            // Deshabilitar la hora previa, si hay un nuevo click\r\n            const horaPrevia = document.querySelector('.horas__hora--seleccionada')\r\n            if (horaPrevia) {\r\n                horaPrevia.classList.remove('horas__hora--seleccionada')\r\n            }\r\n\r\n            // Agregar clase de seleccionado\r\n            e.target.classList.add('horas__hora--seleccionada')\r\n\r\n            inputHiddenHora.value = e.target.dataset.horaId\r\n\r\n            // Llenar el campo oculto de dia\r\n            inputHiddenDia.value = document.querySelector('[name=\"dia\"]:checked').value\r\n        }\r\n    }\r\n\r\n})();\r\n","(function () {\r\n\r\n    const ponentesInput = document.querySelector('#ponentes');\r\n\r\n    if (ponentesInput) {\r\n        let ponentes = [];\r\n        let ponentesFiltrados = [];\r\n        const listadoPonentes = document.querySelector('#listado-ponentes');\r\n        const ponenteHidden = document.querySelector('[name=\"ponente_id\"]');\r\n\r\n        obtenerPonentes();\r\n\r\n        // Escuchar por el evento de escritura en el input\r\n        ponentesInput.addEventListener('input',buscarPonentes);\r\n\r\n        // Comprobar que el input hidden de ponente tenga un valor asignado\r\n        if (ponenteHidden.value) {\r\n            (async () => {\r\n                const ponente = await obtenerPonente(ponenteHidden.value);\r\n                const { nombre,apellido } = ponente;\r\n\r\n                // Insertar en el HTML\r\n                const ponenteDOM = document.createElement('LI');\r\n                ponenteDOM.classList.add('listado-ponentes__ponente','listado-ponentes__ponente--seleccionado');\r\n                ponenteDOM.textContent = `${nombre} ${apellido}`;\r\n\r\n                listadoPonentes.appendChild(ponenteDOM);\r\n            })()\r\n        }\r\n\r\n        async function obtenerPonentes() {\r\n            // Asignamos una URL para hacer el llamado de la API\r\n            const url = `/api/ponentes`;\r\n\r\n            const respuesta = await fetch(url);\r\n            const resultado = await respuesta.json();\r\n\r\n            formatearPonentes(resultado);\r\n        }\r\n\r\n        //obtener un Ãºnico ponente por su id\r\n        async function obtenerPonente(id) {\r\n            // Asignamos una URL para hacer el llamado de la API\r\n            const url = `/api/ponente?id=${id}`;\r\n\r\n            const respuesta = await fetch(url);\r\n            const resultado = await respuesta.json();\r\n\r\n            return resultado;\r\n        }\r\n\r\n        function formatearPonentes(arrayPonentes = []) {\r\n            ponentes = arrayPonentes.map(ponente => {\r\n                return {\r\n                    nombre: `${ponente.nombre.trim()} ${ponente.apellido.trim()}`,\r\n                    id: ponente.id\r\n                }\r\n            })\r\n        }\r\n\r\n        function buscarPonentes(e) {\r\n            const busqueda = e.target.value;\r\n\r\n            if (busqueda.length > 3) {\r\n                // Esta expresiÃ³n regular permite realizar una bÃºsqueda indistintamente de que la palabra estÃ© escrita en mayÃºsculas o minÃºsculas\r\n                const expresion = new RegExp(busqueda,\"i\");\r\n                ponentesFiltrados = ponentes.filter(ponente => {\r\n\r\n                    if (ponente.nombre.toLowerCase().search(expresion) != -1) {\r\n                        return ponente;\r\n                    }\r\n                })\r\n            } else { ponentesFiltrados = []; }\r\n\r\n            mostrarPonentes();\r\n        }\r\n\r\n        function mostrarPonentes() {\r\n\r\n            // limpiar el renderizado de la bÃºsqueda para evitar que se repitan las bÃºsquedas\r\n            // listadoPonentes.innerHTML = '';\r\n            while (listadoPonentes.firstChild) {\r\n                listadoPonentes.removeChild(listadoPonentes.firstChild);\r\n            }\r\n\r\n            if (ponentesFiltrados.length > 0) {\r\n                ponentesFiltrados.forEach(ponente => {\r\n                    const ponenteHTML = document.createElement('LI');\r\n                    ponenteHTML.classList.add('listado-ponentes__ponente');\r\n                    ponenteHTML.textContent = ponente.nombre;\r\n                    ponenteHTML.dataset.ponenteId = ponente.id;\r\n                    ponenteHTML.onclick = seleccionarPonente;\r\n\r\n                    // AÃ±adir el elemento al DOM\r\n                    listadoPonentes.appendChild(ponenteHTML);\r\n                })\r\n            } else {\r\n                const noResultados = document.createElement('P');\r\n                noResultados.classList.add('listado-ponentes__no.resultado');\r\n                noResultados.textContent = 'No hay resultados para tu bÃºsqueda';\r\n                // AÃ±adir el elemento al DOM\r\n                listadoPonentes.appendChild(noResultados);\r\n            }\r\n        }\r\n\r\n        function seleccionarPonente(e) {\r\n            const ponente = e.target;\r\n\r\n            // Remover la clase previa\r\n            const ponentePrevio = document.querySelector('.listado-ponentes__ponente--seleccionado');\r\n            if (ponentePrevio) { ponentePrevio.classList.remove('listado-ponentes__ponente--seleccionado'); }\r\n\r\n\r\n            ponente.classList.add('listado-ponentes__ponente--seleccionado');\r\n\r\n            // Asignamos el valor de la selecciÃ³n al input oculto\r\n            ponenteHidden.value = ponente.dataset.ponenteId;\r\n        }\r\n    }\r\n})();\r\n","(function () {\r\n\r\n    const tagsInput = document.querySelector('#tags_input');\r\n\r\n    if (tagsInput) {\r\n\r\n        let tagsDiv = document.querySelector('#tags');\r\n        let tagsInputHidden = document.querySelector('[name=\"tags\"]');\r\n        let tags = [];\r\n\r\n        // Recuperar del input oculto\r\n        if (tagsInputHidden.value != '') {\r\n            tags = tagsInputHidden.value.split(',');\r\n            mostrarTags();\r\n        }\r\n\r\n        //Escuchar los cambios en el input\r\n        tagsInput.addEventListener('keypress',guardarTag);\r\n\r\n        function guardarTag(e) {\r\n\r\n            if (e.keyCode === 44) {\r\n\r\n                //Evita campos vacÃ­os\r\n                if (e.target.value.trim() === '' || e.target.value <= 1) { return }\r\n\r\n                // Guardar los Tags\r\n                e.preventDefault();\r\n                tags = [ ...tags,e.target.value.trim() ];\r\n                tagsInput.value = '';\r\n\r\n                mostrarTags();\r\n            }\r\n        }\r\n\r\n        function mostrarTags() {\r\n            tagsDiv.textContent = '';\r\n            tags.forEach(tag => {\r\n                const etiqueta = document.createElement('LI');\r\n                etiqueta.classList.add('formulario__tag');\r\n                etiqueta.textContent = tag;\r\n                etiqueta.ondblclick = eliminarTag;\r\n                tagsDiv.appendChild(etiqueta);\r\n            })\r\n            actualizarInputHidden();\r\n        }\r\n\r\n        function eliminarTag(e) {\r\n            e.target.remove();\r\n            tags = tags.filter(tag => tag !== e.target.textContent);\r\n            actualizarInputHidden();\r\n        }\r\n\r\n        function actualizarInputHidden() {\r\n            tagsInputHidden.value = tags.toString();\r\n        }\r\n    }\r\n})()  // IIFE\r\n"]}